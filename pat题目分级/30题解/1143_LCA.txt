#include <iostream>
#include <algorithm>
#include <vector>
#include <math.h>
#include <unordered_map>
#define MAXN 1010
using namespace std;
vector<int> pre,in;
unordered_map<int,int> ind;                         //ÓÃmap»á³¬Ê±
int m,n,u,v;

void lca(int preL,int preR,int inL,int inR){
    if(preL>preR)return;
    int r = ind[pre[preL]],uin = ind[u],vin = ind[v];
    if(uin<r&&vin<r){
        lca(preL+1,preL+r-inL,inL,r-1);return;
    }else if(uin>r&&vin>r){
        lca(preL+r-inL+1,preR,r+1,inR);return;
    }else if(r > min(uin,vin)&&r < max(uin,vin)){
        printf("LCA of %d and %d is %d.\n",u,v,pre[preL]);return;
    }else if(r == uin){
        printf("%d is an ancestor of %d.\n",u,v);return;
    }else if(r == vin){
        printf("%d is an ancestor of %d.\n",v,u);return;
    }
}

int main(){
    cin >> m >> n;
    pre.resize(n+1);in.resize(n+1);
    for(int i=1;i <= n;i++){
        cin >> pre[i];
        in[i] = pre[i];
    }
    sort(in.begin()+1,in.end());
    for(int i = 1;i <= n;i++){
        ind[in[i]]=i;
    }
    for(int i = 0;i < m;i++){
        cin >> u >> v;
        if(ind[u]==0&&ind[v]==0){
            printf("ERROR: %d and %d are not found.\n",u,v);continue;
        }else if(ind[u]==0){
            printf("ERROR: %d is not found.\n",u);continue;
        }else if(ind[v]==0){
            printf("ERROR: %d is not found.\n",v);continue;
        }
        lca(1,n,1,n);
    }
    return 0;
}
