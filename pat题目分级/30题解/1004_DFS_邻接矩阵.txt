#include <stdio.h>
#include <iostream>
using namespace std;

bool vis[110]={false};
int num[110]={0};
int G[110][110]={0};
int max_depth=-1;

//判断是否为叶子结点
bool isLeave(int u){
    for(int i =0;i < 100;i++){
        if(G[u][i]==1)return false;
    }
    return true;
}

// DFS模板套用
void DFS(int u,int depth){
    vis[u]=true;

    if(isLeave(u)){ //如果是叶子
        num[depth]++;
    }

    max_depth = (max_depth>depth)?max_depth:depth;
    for(int v = 0;v < 100;v++){
        if(!vis[v]&&G[u][v]==1){
            DFS(v,depth+1);
        }
    }

}
int main(){
    int n,m;
    cin >> n >> m;
    for(int i = 0;i < m;i++){
        int u,v,temp;
        cin >> u >> temp;
        for(int j = 0;j < temp;j++){
            cin >> v;
            G[u][v]=1;
        }
    }
    DFS(1,1);       //从根节点进行遍历
    cout << num[1];
    for(int i = 2;i <= max_depth;i++){
        cout << " " << num[i];
    }

    return 0;
}
