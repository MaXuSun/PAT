#include <iostream>
#include <stdio.h>
#include <string.h>
#include <stack>
#define MAXN 100010
#define lowbit(i)  ((i)&(-i))
using namespace std;
int n;
int c[MAXN];
stack<int> s;
//树状数组,区间查询,单点更新
int getSum(int x){              //求c[1,x]的sum
    int sum = 0;
    for(int i = x; i >= 1; i -= lowbit(i))
        sum += c[i];
    return sum;
}

void update(int x,int v){        //将第x个整数加上v
    for(int i = x;i < MAXN;i+=lowbit(i)){
        c[i]+=v;
    }
}


void PeekMedian(){
    int l=1,r=MAXN,mid,k=(s.size()+1)/2;
    //二分法查找第k大的数据,即是找到第一个>=k的i使sum(hash[1],hash[i])>=k
    while(l<r){
        mid = (r+l)/2;
        if(getSum(mid)>=k) r = mid;
        else l = mid+1;
    }
    printf("%d\n",l);
}

int main(){
    cin >> n;
    string temp1;
    int temp;
    for(int i = 0;i < n;i++){
        cin >> temp1;
        if(temp1=="Pop"){
            if(!s.empty()) {
                update(s.top(), -1);
                printf("%d\n", s.top());
                s.pop();
            } else {
                printf("Invalid\n");
            }
        }else if(temp1=="PeekMedian"){
            if(!s.empty())
                PeekMedian();
            else printf("Invalid\n");
        }else if(temp1=="Push"){
            cin >> temp;
            s.push(temp);
            update(temp,1);
        }
    }
    return 0;
}
