#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;
//堆排序方法：堆排序的后面像插入排序一样是顺序的
//1.先将[1,n]排成一个大根堆,则最大的在第一个位置,然后交换 1 和 n位元素
//2.再排[1,n-1]成一个大根堆，同上，一直这样操作，即可达到目的
void downAdjust(vector<int> &b,int low,int high){
    int i = 1,j = i*2;
    while(j<=high){
        if(j+1<=high&&b[j]<b[j+1])j=j+1;        //找到i的两子结点中最大的key
        if(b[i]>=b[j])break;
        swap(b[i],b[j]);
        i = j,j = 2*i;
    }
}
int main(){
    int n,p=2;
    cin >> n;
    vector<int> a(n+1),b(n+1);
    for(int i = 1;i <= n;i++)cin >> a[i];
    for(int i = 1;i <= n;i++)cin >> b[i];
    //这几句是判断插入排序的特点
    while(p<=n&&b[p-1]<=b[p])p++;       //前面的是否按顺序排好了
    int index = p;
    while(p<=n&&b[p]==a[p])p++;         //后面的是否和原来的一样
    if(p==n+1){
        printf("Insertion Sort\n");
        sort(b.begin()+1,b.begin()+index+1);
    }else{
        printf("Heap Sort\n");
        p = n;
        while(p>2&&b[p]>=b[1])p--;
        swap(b[1],b[p]);
        downAdjust(b,1,p-1);
    }
    for(int i = 1;i <= n;i++){
        if(i!=1)printf(" ");
        printf("%d",b[i]);
    }
    return 0;
}
