#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <vector>
#define MAXN 1010
using namespace std;
typedef struct node{
    int key,id,layer;
    int lchild,rchild;
}Node;

int max_layer = -1;
int nums=0;
int cnt1=0,cnt2=0;
Node T[MAXN];
vector<int> data;

int newnode(int key,int layer){
    if(layer>max_layer) max_layer = layer;
    T[nums].key = key;
    T[nums].layer = layer;
    T[nums].lchild = -1;
    T[nums].rchild = -1;
    return nums++;
}

void insertT(int& root,int key,int layer){
    if(root==-1){
        root = newnode(key,layer);
        return;
    }
    if(key <= T[root].key){
        insertT(T[root].lchild,key,layer+1);
    }else{
        insertT(T[root].rchild,key,layer+1);
    }
}

int creatT(int n){
    int root = -1;
    for(int i = 0;i < n;i++){
        insertT(root,data[i],1);
    }
    return root;
}

void DFS(int s){
    if(s==-1)return;
    if(T[s].layer == max_layer){
        cnt1++;
    }else if(T[s].layer == max_layer -1){
        cnt2++;
    }
    DFS(T[s].lchild);
    DFS(T[s].rchild);
}

int main(){
    int n;
    scanf("%d",&n);
    data.resize(n);
    for(int i = 0;i < n;i++){
        scanf("%d",&data[i]);
    }
    int root = creatT(n);
    DFS(root);
    printf("%d + %d = %d",cnt1,cnt2,cnt1+cnt2);
    return 0;
}
