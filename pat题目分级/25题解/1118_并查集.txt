#include <stdio.h>
#include <iostream>
#include <stdlib.h>
#include <vector>
#define MAXN 10010
using namespace std;
int father[MAXN];
int nums[MAXN]={0};
bool exist[MAXN]={false};
void init(){
    for(int i = 0;i < MAXN;i++)father[i]=i;
}

int findFa(int x){
    if(x==father[x])return x;
    else{
        int F = findFa(father[x]);    //这里注意是father[x]
        father[x] = F;
        return F;
    }
}

int unionFa(int x,int y){
    int Fx = findFa(x);
    int Fy = findFa(y);
    if(Fx!=Fy){
        father[Fx] = Fy;
    }
    return Fy;
}

int main(){
    int n,k,temp;
    vector<int> p;
    cin >> n;
    init();
    for(int i = 0;i < n;i++){
        cin >> k;
        for(int j = 0;j < k;j++){
            cin >> temp;
            p.push_back(temp);
            exist[temp]=true;
        }
        for(int j = 0;j < p.size()-1;j++){
            int F = unionFa(p[j],p[j+1]);
        }
        p.clear();
    }

    //这里统计每个集合中有几个元素
    for(int i = 1;i <= MAXN;i++){
        if(exist[i]){
            int root = findFa(i);
            nums[root]++;
        }
    }

    int trees=0,birds=0;
    for(int i = 1;i <= MAXN;i++){
        if(exist[i]&&nums[i]!=0){   //这里只遍历根
            trees++;                //这里统计共有几个集合
            birds+=nums[i];         //这里统计所有集合元素个数
        }
    }
    printf("%d %d\n",trees,birds);
    cin >> n;
    for(int i = 0;i < n;i++){
        cin >> k >> temp;
        if(findFa(k)==findFa(temp)){
            printf("Yes\n");
        }else{
            printf("No\n");
        }
    }

    return 0;
}
