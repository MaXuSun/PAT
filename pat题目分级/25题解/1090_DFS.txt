#include <stdio.h>
#include <iostream>
#include <algorithm>
#include <vector>
#include <math.h>
#define inf 99999999
#define MAXN 100010
using namespace std;

//和1079题目几乎一样
int n,root;
vector<vector<int> > G;
bool vis[MAXN] = {false};
double p,r;
double price=0;
int max_depth=-1;
int max_num=0;

void DFS(int u,int depth){
    vis[u]=true;
    if(G[u].size()==0){
        if(depth > max_depth){
            max_depth = depth;
            max_num = 1;
        }else if(depth == max_depth){
            max_num++;
        }
    }

    for(int i = 0;i < G[u].size();i++){
        int v = G[u][i];
        if(!vis[v]){
            DFS(v,depth+1);
        }
    }
}


int main(){
    cin >> n >> p >> r;
    G.resize(n+1);
    int temp;
    for(int i = 0;i < n;i++){
        cin >> temp;
        if(temp!=-1){
            G[temp].push_back(i);
        }else{
            root = i;
        }
    }
    DFS(root,0);
    printf("%.2f %d",p*pow(1+r/100,max_depth),max_num);
    return 0;
}
